set encoding=utf8

syntax enable
colorscheme elflord

set number
highlight CursorLineNr ctermfg=3

set numberwidth=2
set cursorline
set hlsearch
set cmdheight=1

set tabstop=4
set softtabstop=4
set shiftwidth=4

set backspace=2

set updatetime=100

" tab map key
nmap <F5> :tabfirst<CR>
nmap <F6> :tablast<CR>
nmap <F7> :tabprevious<CR>
nmap <F8> :tabnext<CR>

" windows size control map key
nmap <F9> :vertical resize +2<CR>
nmap <F10> :vertical resize -2<CR>
nmap <F11> :resize +2<CR>
nmap <F12> :resize -2<CR>

nmap <leader>z gg=G<C-o><C-o>
nmap <leader>j :%!python -m json.tool

" StatusLine and TabLine
" ------------------------------------------------
" StatusLine
set laststatus=2
set statusline=%#CgAc#\ %*%<%f\ %m%=%y\ %{&fileencoding!=''?'['.&fileencoding.']':''}\ %{'['.&fileformat.']'}\ %10(%l,%c%)\ =%L\ %P
highlight StatusLine cterm=underline,bold ctermfg=0 ctermbg=7
highlight StatusLineNc cterm=underline ctermfg=0 ctermbg=7
highlight CgAc cterm=underline,bold ctermfg=7 ctermbg=2
highlight CgNc cterm=underline,bold ctermfg=7 ctermbg=NONE

function MyStatusLineEnter()
	if exists('b:NERDTree')
		return "%{b:NERDTree.root.path.str()}"
	else
		return ""
	endif
endfunction

function MyStatusLineLeave()
	if exists('b:NERDTree')
		return "%{b:NERDTree.root.path.str()}"
	else
		return substitute(&g:statusline, 'CgAc', "CgNc", "g")
	endif
endfunction

autocmd WinEnter * let &l:statusline=MyStatusLineEnter()
autocmd WinLeave * let &l:statusline=MyStatusLineLeave()


" TabLine
set showtabline=2
highlight TabLineSel cterm=underline,bold ctermfg=7 ctermbg=2
highlight TabLine cterm=underline ctermfg=0 ctermbg=7
highlight TabLineFill cterm=underline,bold ctermfg=7 ctermbg=NONE

function MyTabLine()
	let s = ''
	for i in range(tabpagenr('$'))
		if i + 1 == tabpagenr()
			let s .= '%#TabLineSel#'
		else
			let s .= '%#TabLine#'
		endif

		let s .= ' (' . tabpagewinnr((i + 1),'$') . ')'
		let s .= ' %{MyTabLabel(' . (i + 1) . ')} '
	endfor

	let s .= '%#TabLineFill#'
	let s .= "%=[%{tabpagenr()}/%{tabpagenr('$')}]"

	return s
endfunction

function MyTabLabel(n)
	let buflist = tabpagebuflist(a:n)
	let winnr = tabpagewinnr(a:n)
	return pathshorten(bufname(buflist[winnr - 1]))
endfunction

set tabline=%!MyTabLine()
" ------------------------------------------------

" 插件列表
" ------------------------------------------------
call plug#begin('~/.vim/plugged')
" 资源树
Plug 'scrooloose/nerdtree'
" 括号补全
Plug 'jiangmiao/auto-pairs'
" 代码注释
Plug 'tpope/vim-commentary'
" git文件状态
Plug 'airblade/vim-gitgutter'
call plug#end()
" ------------------------------------------------

" 插件配置
" ------------------------------------------------
" scrooloose/nerdtree
nmap <F3> :NERDTreeToggle<CR>

" airblade/vim-gitgutter
let g:gitgutter_sign_removed_first_line = '^'

highlight GitGutterAdd ctermfg=2
highlight GitGutterChange ctermfg=3
highlight GitGutterDelete ctermfg=1
